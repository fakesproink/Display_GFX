Blockly.Msg.OLED_GFX_TITLE = "Display_GFX";
Blockly.Msg.OLED_GFX_CLEAR = "Clear";
Blockly.Msg.OLED_GFX_I2CADDR = "I2C_addr";
Blockly.Msg.OLED_GFX_CHIP = "Chip";
Blockly.Msg.OLED_GFX_PIN = "Pins";
Blockly.Msg.OLED_GFX_UP = "Up";
Blockly.Msg.OLED_GFX_DOWN = "Down";
Blockly.Msg.OLED_GFX_CLEAR_TOOLTIP = "Clear the screen. Sets cursors to 1,1.";
Blockly.Msg.OLED_GFX_PRINT = "Print";
Blockly.Msg.OLED_GFX_LINE = "Line";
Blockly.Msg.OLED_GFX_COLUMN = "Column";
Blockly.Msg.OLED_GFX_MESSAGE = "Message";
Blockly.Msg.OLED_GFX_FONT = "Font";
Blockly.Msg.OLED_GFX_SMALL = "Small 6x8";
Blockly.Msg.OLED_GFX_LARGE = "Large 9x15";
Blockly.Msg.OLED_GFX_PRINT_TOOLTIP = "Only print ASCII characters, line is vertical setting and collumn is horizontal setting,\nwe have 2 font size, small(6x8) and large(9x15).\nThe limit of the small font is 1 to 8 for the line and column is 1 to 21 for column and for the large font is 1 to 7 for the line and 1 to 14 for the column.\nThe limit of the small font is 1 to 21 characters and the large font limit is 1 to 14 characters.";
Blockly.Msg.OLED_GFX_PRINTGFX = "PrintGFX";
Blockly.Msg.OLED_GFX_MESSAGETHEN = "Message TH/EN";
Blockly.Msg.OLED_GFX_PRINTGFX_TOOLTIP = "Can print ASCII characters and Thai characters,\nline is vertical setting and collumn is horizontal setting. The limit of this is 1 to 6 for the line and 1 to 21 for column.";
Blockly.Msg.OLED_GFX_NUM2STR = "Number to string";
Blockly.Msg.OLED_GFX_NUMBER = "Number";
Blockly.Msg.OLED_GFX_WIDTH = "Width";
Blockly.Msg.OLED_GFX_DECIMALS = "Decimals";
Blockly.Msg.OLED_GFX_FORMAT = "Format";
Blockly.Msg.OLED_GFX_INTEGER = "integer";
Blockly.Msg.OLED_GFX_HEXADECIMAL = "hexadecimal";
Blockly.Msg.OLED_GFX_HEXWITH0S = "hex with 0s";
Blockly.Msg.OLED_GFX_FIXEDPOINT = "fixed point";
Blockly.Msg.OLED_GFX_EXPONENTIAL = "exponential";
Blockly.Msg.OLED_GFX_NUM2STR_TOOLTIP = "Convert a number to a formatted string\nValue: number to convert (default 0)\nWidth: output string length (default 6)\nDecimals: digits after decimal point (default 0)\nFormat: how to convert (default integer)";